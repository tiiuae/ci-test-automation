# Running 'sched/messaging' benchmark:
# 20 sender and receiver processes per group
# 10 groups == 400 processes run

     Total time: 5.416 [sec]
# Running 'sched/pipe' benchmark:
# Executed 50000 pipe operations between two processes

     Total time: 6.145 [sec]

     122.905840 usecs/op
           8136 ops/sec
# Running 'syscall/basic' benchmark:
# Executed 10,000,000 getppid() calls
     Total time: 4.924 [sec]

       0.492459 usecs/op
      2,030,625 ops/sec
# Running 'mem/memcpy' benchmark:
# function 'default' (Default memcpy() provided by glibc)
# Copying 1MB bytes ...

     112.943302 MB/sec
# Running 'mem/memset' benchmark:
# function 'default' (Default memset() provided by glibc)
# Copying 1MB bytes ...

     301.023480 MB/sec
# Running 'mem/find_bit' benchmark:
1000 operations 1 bits set of 1 bits
  Average for_each_set_bit took: 264.600 usec (+- 21.080 usec)
  Average test_bit loop took:    95.400 usec (+- 0.245 usec)
1000 operations 1 bits set of 2 bits
  Average for_each_set_bit took: 253.400 usec (+- 0.400 usec)
  Average test_bit loop took:    114.400 usec (+- 0.245 usec)
1000 operations 2 bits set of 2 bits
  Average for_each_set_bit took: 345.500 usec (+- 31.625 usec)
  Average test_bit loop took:    148.000 usec (+- 11.201 usec)
1000 operations 1 bits set of 4 bits
  Average for_each_set_bit took: 253.200 usec (+- 0.200 usec)
  Average test_bit loop took:    161.200 usec (+- 0.200 usec)
1000 operations 2 bits set of 4 bits
  Average for_each_set_bit took: 353.300 usec (+- 33.725 usec)
  Average test_bit loop took:    190.500 usec (+- 9.768 usec)
1000 operations 4 bits set of 4 bits
  Average for_each_set_bit took: 503.533 usec (+- 61.019 usec)
  Average test_bit loop took:    251.333 usec (+- 23.993 usec)
1000 operations 1 bits set of 8 bits
  Average for_each_set_bit took: 253.200 usec (+- 0.200 usec)
  Average test_bit loop took:    236.200 usec (+- 0.200 usec)
1000 operations 2 bits set of 8 bits
  Average for_each_set_bit took: 356.600 usec (+- 35.524 usec)
  Average test_bit loop took:    280.500 usec (+- 14.767 usec)
1000 operations 4 bits set of 8 bits
  Average for_each_set_bit took: 522.200 usec (+- 66.853 usec)
  Average test_bit loop took:    337.533 usec (+- 23.625 usec)
1000 operations 8 bits set of 8 bits
  Average for_each_set_bit took: 789.500 usec (+- 117.286 usec)
  Average test_bit loop took:    430.900 usec (+- 41.047 usec)
1000 operations 1 bits set of 16 bits
  Average for_each_set_bit took: 253.200 usec (+- 0.200 usec)
  Average test_bit loop took:    392.200 usec (+- 9.200 usec)
1000 operations 2 bits set of 16 bits
  Average for_each_set_bit took: 343.200 usec (+- 30.000 usec)
  Average test_bit loop took:    431.100 usec (+- 14.282 usec)
1000 operations 4 bits set of 16 bits
  Average for_each_set_bit took: 515.333 usec (+- 68.427 usec)
  Average test_bit loop took:    496.733 usec (+- 26.510 usec)
1000 operations 8 bits set of 16 bits
  Average for_each_set_bit took: 791.500 usec (+- 120.968 usec)
  Average test_bit loop took:    592.700 usec (+- 42.978 usec)
1000 operations 16 bits set of 16 bits
  Average for_each_set_bit took: 1262.360 usec (+- 214.995 usec)
  Average test_bit loop took:    757.920 usec (+- 75.644 usec)
1000 operations 1 bits set of 32 bits
  Average for_each_set_bit took: 262.000 usec (+- 8.752 usec)
  Average test_bit loop took:    676.400 usec (+- 0.245 usec)
1000 operations 2 bits set of 32 bits
  Average for_each_set_bit took: 347.600 usec (+- 28.830 usec)
  Average test_bit loop took:    722.100 usec (+- 16.429 usec)
1000 operations 4 bits set of 32 bits
  Average for_each_set_bit took: 517.400 usec (+- 66.983 usec)
  Average test_bit loop took:    787.667 usec (+- 27.103 usec)
1000 operations 8 bits set of 32 bits
  Average for_each_set_bit took: 792.400 usec (+- 120.105 usec)
  Average test_bit loop took:    901.050 usec (+- 49.378 usec)
1000 operations 16 bits set of 32 bits
  Average for_each_set_bit took: 1271.880 usec (+- 217.841 usec)
  Average test_bit loop took:    1065.960 usec (+- 77.970 usec)
1000 operations 32 bits set of 32 bits
  Average for_each_set_bit took: 2108.667 usec (+- 391.734 usec)
  Average test_bit loop took:    1360.567 usec (+- 138.434 usec)
1000 operations 1 bits set of 64 bits
  Average for_each_set_bit took: 265.400 usec (+- 10.299 usec)
  Average test_bit loop took:    1277.000 usec (+- 13.751 usec)
1000 operations 2 bits set of 64 bits
  Average for_each_set_bit took: 355.100 usec (+- 30.292 usec)
  Average test_bit loop took:    1317.400 usec (+- 15.731 usec)
1000 operations 4 bits set of 64 bits
  Average for_each_set_bit took: 515.600 usec (+- 63.885 usec)
  Average test_bit loop took:    1380.533 usec (+- 26.131 usec)
1000 operations 8 bits set of 64 bits
  Average for_each_set_bit took: 791.000 usec (+- 119.294 usec)
  Average test_bit loop took:    1495.550 usec (+- 49.689 usec)
1000 operations 16 bits set of 64 bits
  Average for_each_set_bit took: 1264.600 usec (+- 215.402 usec)
  Average test_bit loop took:    1693.320 usec (+- 89.967 usec)
1000 operations 32 bits set of 64 bits
  Average for_each_set_bit took: 2102.033 usec (+- 391.040 usec)
  Average test_bit loop took:    1981.333 usec (+- 141.016 usec)
1000 operations 64 bits set of 64 bits
  Average for_each_set_bit took: 3595.971 usec (+- 711.092 usec)
  Average test_bit loop took:    2499.857 usec (+- 248.970 usec)
1000 operations 1 bits set of 128 bits
  Average for_each_set_bit took: 273.400 usec (+- 6.845 usec)
  Average test_bit loop took:    2461.400 usec (+- 10.472 usec)
1000 operations 2 bits set of 128 bits
  Average for_each_set_bit took: 361.700 usec (+- 29.610 usec)
  Average test_bit loop took:    2502.600 usec (+- 15.026 usec)
1000 operations 4 bits set of 128 bits
  Average for_each_set_bit took: 546.933 usec (+- 73.443 usec)
  Average test_bit loop took:    2564.600 usec (+- 25.853 usec)
1000 operations 8 bits set of 128 bits
  Average for_each_set_bit took: 841.400 usec (+- 131.510 usec)
  Average test_bit loop took:    2682.700 usec (+- 50.814 usec)
1000 operations 16 bits set of 128 bits
  Average for_each_set_bit took: 1318.040 usec (+- 220.979 usec)
  Average test_bit loop took:    2914.000 usec (+- 106.560 usec)
1000 operations 32 bits set of 128 bits
  Average for_each_set_bit took: 2146.900 usec (+- 390.049 usec)
  Average test_bit loop took:    3261.200 usec (+- 169.215 usec)
1000 operations 64 bits set of 128 bits
  Average for_each_set_bit took: 3642.114 usec (+- 711.171 usec)
  Average test_bit loop took:    3775.600 usec (+- 260.062 usec)
1000 operations 128 bits set of 128 bits
  Average for_each_set_bit took: 6314.525 usec (+- 1291.383 usec)
  Average test_bit loop took:    4704.350 usec (+- 454.327 usec)
1000 operations 1 bits set of 256 bits
  Average for_each_set_bit took: 297.800 usec (+- 7.046 usec)
  Average test_bit loop took:    4838.000 usec (+- 18.311 usec)
1000 operations 2 bits set of 256 bits
  Average for_each_set_bit took: 388.000 usec (+- 30.250 usec)
  Average test_bit loop took:    4875.900 usec (+- 15.988 usec)
1000 operations 4 bits set of 256 bits
  Average for_each_set_bit took: 538.200 usec (+- 60.128 usec)
  Average test_bit loop took:    4940.333 usec (+- 26.715 usec)
1000 operations 8 bits set of 256 bits
  Average for_each_set_bit took: 808.950 usec (+- 116.539 usec)
  Average test_bit loop took:    5050.350 usec (+- 48.039 usec)
1000 operations 16 bits set of 256 bits
  Average for_each_set_bit took: 1275.560 usec (+- 211.875 usec)
  Average test_bit loop took:    5242.840 usec (+- 87.400 usec)
1000 operations 32 bits set of 256 bits
  Average for_each_set_bit took: 2108.467 usec (+- 388.034 usec)
  Average test_bit loop took:    5582.667 usec (+- 158.679 usec)
1000 operations 64 bits set of 256 bits
  Average for_each_set_bit took: 3585.314 usec (+- 703.553 usec)
  Average test_bit loop took:    6186.886 usec (+- 287.813 usec)
1000 operations 128 bits set of 256 bits
  Average for_each_set_bit took: 6261.375 usec (+- 1289.554 usec)
  Average test_bit loop took:    7111.225 usec (+- 465.343 usec)
1000 operations 256 bits set of 256 bits
  Average for_each_set_bit took: 11115.333 usec (+- 2365.165 usec)
  Average test_bit loop took:    8810.356 usec (+- 833.984 usec)
1000 operations 1 bits set of 512 bits
  Average for_each_set_bit took: 346.800 usec (+- 1.800 usec)
  Average test_bit loop took:    9566.800 usec (+- 10.726 usec)
1000 operations 2 bits set of 512 bits
  Average for_each_set_bit took: 442.500 usec (+- 31.927 usec)
  Average test_bit loop took:    9606.100 usec (+- 14.935 usec)
1000 operations 4 bits set of 512 bits
  Average for_each_set_bit took: 599.000 usec (+- 62.824 usec)
  Average test_bit loop took:    9670.000 usec (+- 26.162 usec)
1000 operations 8 bits set of 512 bits
  Average for_each_set_bit took: 845.500 usec (+- 108.514 usec)
  Average test_bit loop took:    9784.700 usec (+- 49.609 usec)
1000 operations 16 bits set of 512 bits
  Average for_each_set_bit took: 1301.360 usec (+- 205.169 usec)
  Average test_bit loop took:    9979.320 usec (+- 88.817 usec)
1000 operations 32 bits set of 512 bits
  Average for_each_set_bit took: 2116.567 usec (+- 378.961 usec)
  Average test_bit loop took:    10319.033 usec (+- 159.186 usec)
1000 operations 64 bits set of 512 bits
  Average for_each_set_bit took: 3589.771 usec (+- 698.566 usec)
  Average test_bit loop took:    10921.171 usec (+- 287.245 usec)
1000 operations 128 bits set of 512 bits
  Average for_each_set_bit took: 6238.100 usec (+- 1277.151 usec)
  Average test_bit loop took:    12009.525 usec (+- 524.932 usec)
1000 operations 256 bits set of 512 bits
  Average for_each_set_bit took: 11094.289 usec (+- 2360.692 usec)
  Average test_bit loop took:    13692.444 usec (+- 855.601 usec)
1000 operations 512 bits set of 512 bits
  Average for_each_set_bit took: 19967.440 usec (+- 4354.874 usec)
  Average test_bit loop took:    16799.640 usec (+- 1537.831 usec)
1000 operations 1 bits set of 1024 bits
  Average for_each_set_bit took: 445.200 usec (+- 6.461 usec)
  Average test_bit loop took:    19023.600 usec (+- 15.292 usec)
1000 operations 2 bits set of 1024 bits
  Average for_each_set_bit took: 543.200 usec (+- 32.950 usec)
  Average test_bit loop took:    19116.700 usec (+- 62.523 usec)
1000 operations 4 bits set of 1024 bits
  Average for_each_set_bit took: 705.333 usec (+- 65.030 usec)
  Average test_bit loop took:    19168.667 usec (+- 45.715 usec)
1000 operations 8 bits set of 1024 bits
  Average for_each_set_bit took: 954.500 usec (+- 110.196 usec)
  Average test_bit loop took:    19271.450 usec (+- 53.171 usec)
1000 operations 16 bits set of 1024 bits
  Average for_each_set_bit took: 1385.120 usec (+- 196.464 usec)
  Average test_bit loop took:    19463.400 usec (+- 89.080 usec)
1000 operations 32 bits set of 1024 bits
  Average for_each_set_bit took: 2173.800 usec (+- 365.874 usec)
  Average test_bit loop took:    19800.900 usec (+- 158.473 usec)
1000 operations 64 bits set of 1024 bits
  Average for_each_set_bit took: 3619.743 usec (+- 683.248 usec)
  Average test_bit loop took:    20404.829 usec (+- 287.630 usec)
1000 operations 128 bits set of 1024 bits
  Average for_each_set_bit took: 6258.025 usec (+- 1267.059 usec)
  Average test_bit loop took:    21491.900 usec (+- 524.614 usec)
1000 operations 256 bits set of 1024 bits
  Average for_each_set_bit took: 11059.378 usec (+- 2335.882 usec)
  Average test_bit loop took:    23457.244 usec (+- 958.713 usec)
1000 operations 512 bits set of 1024 bits
  Average for_each_set_bit took: 19929.880 usec (+- 4343.054 usec)
  Average test_bit loop took:    26534.720 usec (+- 1575.548 usec)
1000 operations 1024 bits set of 1024 bits
  Average for_each_set_bit took: 36258.218 usec (+- 8058.086 usec)
  Average test_bit loop took:    32261.745 usec (+- 2849.840 usec)
1000 operations 1 bits set of 2048 bits
  Average for_each_set_bit took: 631.000 usec (+- 6.008 usec)
  Average test_bit loop took:    37957.800 usec (+- 15.982 usec)
1000 operations 2 bits set of 2048 bits
  Average for_each_set_bit took: 735.300 usec (+- 35.263 usec)
  Average test_bit loop took:    38006.500 usec (+- 20.221 usec)
1000 operations 4 bits set of 2048 bits
  Average for_each_set_bit took: 887.467 usec (+- 61.974 usec)
  Average test_bit loop took:    38074.133 usec (+- 29.321 usec)
1000 operations 8 bits set of 2048 bits
  Average for_each_set_bit took: 1150.150 usec (+- 114.106 usec)
  Average test_bit loop took:    38185.950 usec (+- 49.580 usec)
1000 operations 16 bits set of 2048 bits
  Average for_each_set_bit took: 1581.200 usec (+- 198.030 usec)
  Average test_bit loop took:    38375.320 usec (+- 86.818 usec)
1000 operations 32 bits set of 2048 bits
  Average for_each_set_bit took: 2338.200 usec (+- 354.751 usec)
  Average test_bit loop took:    38719.233 usec (+- 160.012 usec)
1000 operations 64 bits set of 2048 bits
  Average for_each_set_bit took: 3740.886 usec (+- 662.735 usec)
  Average test_bit loop took:    39324.229 usec (+- 288.657 usec)
1000 operations 128 bits set of 2048 bits
  Average for_each_set_bit took: 6333.475 usec (+- 1241.561 usec)
  Average test_bit loop took:    40411.875 usec (+- 525.257 usec)
1000 operations 256 bits set of 2048 bits
  Average for_each_set_bit took: 11106.356 usec (+- 2314.386 usec)
  Average test_bit loop took:    42377.378 usec (+- 959.049 usec)
1000 operations 512 bits set of 2048 bits
  Average for_each_set_bit took: 19881.600 usec (+- 4297.977 usec)
  Average test_bit loop took:    45972.160 usec (+- 1765.459 usec)
1000 operations 1024 bits set of 2048 bits
  Average for_each_set_bit took: 36203.891 usec (+- 8035.849 usec)
  Average test_bit loop took:    51649.800 usec (+- 2922.446 usec)
1000 operations 2048 bits set of 2048 bits
  Average for_each_set_bit took: 66440.417 usec (+- 14987.667 usec)
  Average test_bit loop took:    62261.300 usec (+- 5306.548 usec)
# Running 'numa/mem' benchmark:

 # Running main, "perf bench numa numa-mem -p 1 -t 1 -P 1024 -C 0 -M 0 -s 5 -zZq --thp 1 --no-data_rand_walk"
          5.133 secs slowest (max) thread-runtime
          5.000 secs fastest (min) thread-runtime
          5.025 secs average thread-runtime
          1.299 % difference between max/avg runtime
          1.075 GB data processed, per thread
          1.075 GB data processed, total
          4.776 nsecs/byte/thread runtime
          0.209 GB/sec/thread speed
          0.209 GB/sec total speed
# Running futex/hash benchmark...
Run summary [PID 2199]: 4 threads, each operating on 1024 [private] futexes for 10 secs.

[thread  0] futexes: 0x32ada0 ... 0x32bd9c [ 561766 ops/sec ]
[thread  1] futexes: 0x32c020 ... 0x32d01c [ 561561 ops/sec ]
[thread  2] futexes: 0x32dd30 ... 0x32ed2c [ 559411 ops/sec ]
[thread  3] futexes: 0x32ed40 ... 0x32fd3c [ 561664 ops/sec ]

Averaged 561100 operations/sec (+- 0.10%), total secs = 10

# Running futex/wake benchmark...
Run summary [PID 2199]: blocking on 4 threads (at [private] futex 0x305a3c), waking up 1 at a time.

[Run 1]: Wokeup 4 of 4 threads in 0.0560 ms
[Run 2]: Wokeup 4 of 4 threads in 0.0530 ms
[Run 3]: Wokeup 4 of 4 threads in 0.0520 ms
[Run 4]: Wokeup 4 of 4 threads in 0.0560 ms
[Run 5]: Wokeup 4 of 4 threads in 0.0500 ms
[Run 6]: Wokeup 4 of 4 threads in 0.0520 ms
[Run 7]: Wokeup 4 of 4 threads in 0.0520 ms
[Run 8]: Wokeup 4 of 4 threads in 0.0540 ms
[Run 9]: Wokeup 4 of 4 threads in 0.0560 ms
[Run 10]: Wokeup 4 of 4 threads in 0.0520 ms
Wokeup 4 of 4 threads in 0.0533 ms (+-1.25%)

# Running futex/wake-parallel benchmark...
Run summary [PID 2199]: blocking on 4 threads (at [private] futex 0x305b34), 4 threads waking up 1 at a time.

[Run 1]: Avg per-thread latency (waking 1/4 threads) in 0.1028 ms (+-86.05%)
[Run 2]: Avg per-thread latency (waking 1/4 threads) in 0.1078 ms (+-85.77%)
[Run 3]: Avg per-thread latency (waking 1/4 threads) in 0.1170 ms (+-68.66%)
[Run 4]: Avg per-thread latency (waking 1/4 threads) in 0.1660 ms (+-53.95%)
[Run 5]: Avg per-thread latency (waking 1/4 threads) in 0.1085 ms (+-83.13%)
[Run 6]: Avg per-thread latency (waking 1/4 threads) in 0.1197 ms (+-67.51%)
[Run 7]: Avg per-thread latency (waking 1/4 threads) in 0.2840 ms (+-32.25%)
[Run 8]: Avg per-thread latency (waking 1/4 threads) in 0.0190 ms (+-15.64%)
[Run 9]: Avg per-thread latency (waking 1/4 threads) in 0.1695 ms (+-53.26%)
[Run 10]: Avg per-thread latency (waking 1/4 threads) in 0.0180 ms (+-16.82%)
Avg per-thread latency (waking 1/4 threads) in 0.1212 ms (+-20.41%)

# Running futex/requeue benchmark...
Run summary [PID 2199]: Requeuing 4 threads (from [private] 0x305c6c to 0x305c70), 1 at a time.

[Run 1]: Requeued 4 of 4 threads in 0.0200 ms
[Run 2]: Requeued 4 of 4 threads in 0.0180 ms
[Run 3]: Requeued 4 of 4 threads in 0.0180 ms
[Run 4]: Requeued 4 of 4 threads in 0.0190 ms
[Run 5]: Requeued 4 of 4 threads in 0.0180 ms
[Run 6]: Requeued 4 of 4 threads in 0.0170 ms
[Run 7]: Requeued 4 of 4 threads in 0.0170 ms
[Run 8]: Requeued 4 of 4 threads in 0.0160 ms
[Run 9]: Requeued 4 of 4 threads in 0.0180 ms
[Run 10]: Requeued 4 of 4 threads in 0.0180 ms
Requeued 4 of 4 threads in 0.0179 ms (+-1.94%)

# Running futex/lock-pi benchmark...
Run summary [PID 2199]: 4 threads doing pi lock/unlock pairing for 10 secs.

[thread   0] futex: 0x305da0 [ 1093 ops/sec ]
[thread   1] futex: 0x305da0 [ 1093 ops/sec ]
[thread   2] futex: 0x305da0 [ 1093 ops/sec ]
[thread   3] futex: 0x305da0 [ 1093 ops/sec ]

Averaged 1093 operations/sec (+- 0.00%), total secs = 10

# Running 'epoll/wait' benchmark:
Run summary [PID 2368]: 3 threads monitoring on 64 file-descriptors for 8 secs.

[thread  0] fdmap: 0x32ad80 ... 0x32ae7c [ 82578 ops/sec ]
[thread  1] fdmap: 0x32b100 ... 0x32b1fc [ 82418 ops/sec ]
[thread  2] fdmap: 0x32b3c0 ... 0x32b4bc [ 81229 ops/sec ]

Averaged 82075 operations/sec (+- 0.52%), total secs = 8
# Running 'epoll/ctl' benchmark:
Run summary [PID 2379]: 4 threads doing epoll_ctl ops 64 file-descriptors for 8 secs.

[thread  0] fdmap: 0x32ade0 ... 0x32aedc [ add: 128896 ops; mod: 128896 ops; del: 128896 ops ]
[thread  1] fdmap: 0x32b160 ... 0x32b25c [ add: 128384 ops; mod: 128384 ops; del: 128384 ops ]
[thread  2] fdmap: 0x32b420 ... 0x32b51c [ add: 128128 ops; mod: 128128 ops; del: 128128 ops ]
[thread  3] fdmap: 0x32b6e0 ... 0x32b7dc [ add: 129792 ops; mod: 129792 ops; del: 129792 ops ]

Averaged 128800 ADD operations (+- 0.29%)
Averaged 128800 MOD operations (+- 0.29%)
Averaged 128800 DEL operations (+- 0.29%)
# Running 'internals/synthesize' benchmark:
Computing performance of single threaded perf event synthesis by
synthesizing events on the perf process itself:
  Average synthesis took: 3824.315 usec (+- 2.455 usec)
  Average num. events: 50.000 (+- 0.000)
  Average time per event 76.486 usec
  Average data synthesis took: 3954.223 usec (+- 1.266 usec)
  Average num. events: 170.000 (+- 0.000)
  Average time per event 23.260 usec
# Running 'internals/kallsyms-parse' benchmark:
  Average kallsyms__parse took: 1213.477 ms (+- 0.709 ms)