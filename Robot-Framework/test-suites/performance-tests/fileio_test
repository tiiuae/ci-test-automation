# Test set to be run with sysbench

# These variables need to be given on the command line. For example: ./fileio_test 20
THREADS="$1"
DISK_CHECK_DIRECTORY="${2:-/}"

# Create a directory for the results and copy this script into it
RESULT_DIR="/tmp/sysbench_results"
echo -e "\nCreating directory for test results:\n$RESULT_DIR"
mkdir -p $RESULT_DIR
FileName=${0##*/}
cp ${FileName} $RESULT_DIR

# Create test_info file with system information
echo -e "\nSaving information about test environment to $RESULT_DIR/test_info\n"
echo -e "$(lscpu)" "\n\n" "$(free)" "\n\n" "$(df)" "\n\n" > $RESULT_DIR/test_info
echo -e "\nHost: $(hostname)\n" | tee -a $RESULT_DIR/test_info
echo -e "\nRunning the test in $DISK_CHECK_DIRECTORY" | tee -a $RESULT_DIR/test_info

# Calculate total memory in kB and set FILE_TOTAL_SIZE 4GB higher than the total memory
TOTAL_MEM_kB=$(free | awk -F: 'NR==2 {print $2}' | awk '{print $1}')
FILE_TOTAL_SIZE_kB=$((TOTAL_MEM_kB + 4000000))

# Read available disk space in kB and check for sufficient disk space
AVAILABLE_DISK_SPACE_kB=$(df | grep -w $DISK_CHECK_DIRECTORY | awk '{print $4}')
if [ $((FILE_TOTAL_SIZE_kB + FILE_TOTAL_SIZE_kB / 10)) -gt $AVAILABLE_DISK_SPACE_kB ]; then
    echo -e "\nInsufficient disk space for fileio test." | tee -a $RESULT_DIR/test_info
    exit 1
fi

# Execute sysbench fileio tests if the checks passed
sysbench fileio --file-total-size=${FILE_TOTAL_SIZE_kB}K --threads=${THREADS} --file-test-mode=seqrd prepare
sysbench fileio --file-total-size=${FILE_TOTAL_SIZE_kB}K --threads=${THREADS} --file-test-mode=seqrd --time=30 run | tee $RESULT_DIR/fileio_rd_report
sysbench fileio cleanup
sysbench fileio --file-total-size=${FILE_TOTAL_SIZE_kB}K --threads=${THREADS} --file-test-mode=seqwr --time=30 run | tee $RESULT_DIR/fileio_wr_report
sysbench fileio cleanup

echo -e "\nTest finished.\n"